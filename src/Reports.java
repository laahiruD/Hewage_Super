
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.AcroFields.Item;
import com.itextpdf.text.pdf.CMYKColor;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author lahiru
 */
public class Reports extends javax.swing.JFrame {

    /**
     * Creates new form Reports
     */
    public Reports() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jButton17 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jComboBox1 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        jComboBox2 = new javax.swing.JComboBox();
        jButton9 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jDateChooser5 = new com.toedter.calendar.JDateChooser();
        jDateChooser6 = new com.toedter.calendar.JDateChooser();
        jButton11 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jDateChooser7 = new com.toedter.calendar.JDateChooser();
        jDateChooser8 = new com.toedter.calendar.JDateChooser();
        jButton16 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 650));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));
        jPanel4.setLayout(null);

        jPanel23.setBackground(new java.awt.Color(153, 153, 153));
        jPanel23.setLayout(null);

        jButton17.setText("Items");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel23.add(jButton17);
        jButton17.setBounds(20, 20, 110, 30);

        jButton19.setText("Promotions");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        jPanel23.add(jButton19);
        jButton19.setBounds(20, 60, 110, 30);

        jButton20.setText("Current Stock");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jPanel23.add(jButton20);
        jButton20.setBounds(20, 100, 110, 30);

        jPanel4.add(jPanel23);
        jPanel23.setBounds(0, 0, 160, 150);

        jPanel1.add(jPanel4);
        jPanel4.setBounds(0, 80, 160, 730);

        jPanel5.setBackground(new java.awt.Color(33, 97, 97));
        jPanel5.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("HEWAGE SUPER");
        jPanel5.add(jLabel1);
        jLabel1.setBounds(40, 20, 320, 40);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1);
        jButton1.setBounds(890, 20, 80, 30);

        jPanel1.add(jPanel5);
        jPanel5.setBounds(0, 0, 1000, 80);

        jPanel6.setMinimumSize(new java.awt.Dimension(500, 330));
        jPanel6.setPreferredSize(new java.awt.Dimension(500, 330));
        jPanel6.setLayout(null);

        jPanel14.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel14.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
        }

        jPanel14.add(jScrollPane1);
        jScrollPane1.setBounds(30, 20, 760, 240);

        jButton5.setText("Report");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel14.add(jButton5);
        jButton5.setBounds(670, 310, 100, 40);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("Total :");
        jPanel14.add(jLabel18);
        jLabel18.setBounds(30, 310, 44, 30);
        jPanel14.add(jTextField1);
        jTextField1.setBounds(80, 310, 150, 30);

        jButton6.setText("Clear");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel14.add(jButton6);
        jButton6.setBounds(550, 310, 90, 40);

        jPanel6.add(jPanel14);
        jPanel14.setBounds(0, 130, 820, 380);

        jPanel13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel13.setLayout(null);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Select Time Period");
        jPanel13.add(jLabel15);
        jLabel15.setBounds(15, 22, 140, 24);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("From");
        jPanel13.add(jLabel17);
        jLabel17.setBounds(10, 50, 44, 30);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("To");
        jPanel13.add(jLabel16);
        jLabel16.setBounds(260, 50, 21, 23);
        jPanel13.add(jDateChooser1);
        jDateChooser1.setBounds(60, 50, 160, 30);
        jPanel13.add(jDateChooser2);
        jDateChooser2.setBounds(290, 50, 160, 30);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Stock Items", "Date" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jPanel13.add(jComboBox1);
        jComboBox1.setBounds(490, 50, 110, 30);

        jButton3.setText("Get Details");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton3);
        jButton3.setBounds(630, 40, 130, 40);

        jPanel6.add(jPanel13);
        jPanel13.setBounds(0, 20, 820, 100);

        jPanel1.add(jPanel6);
        jPanel6.setBounds(170, 70, 830, 740);

        jTabbedPane1.addTab("Purchase", jPanel1);

        jPanel2.setLayout(null);

        jPanel7.setBackground(new java.awt.Color(33, 97, 97));
        jPanel7.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("HEWAGE SUPER");
        jPanel7.add(jLabel3);
        jLabel3.setBounds(40, 20, 320, 40);

        jButton10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton10.setText("Logout");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton10);
        jButton10.setBounds(890, 20, 80, 30);

        jPanel2.add(jPanel7);
        jPanel7.setBounds(0, 0, 1000, 80);

        jPanel8.setBackground(new java.awt.Color(51, 51, 51));
        jPanel8.setLayout(null);
        jPanel2.add(jPanel8);
        jPanel8.setBounds(0, 80, 160, 520);

        jPanel11.setLayout(null);

        jPanel15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel15.setLayout(null);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
            jTable2.getColumnModel().getColumn(5).setResizable(false);
            jTable2.getColumnModel().getColumn(6).setResizable(false);
        }

        jPanel15.add(jScrollPane2);
        jScrollPane2.setBounds(30, 20, 760, 240);

        jButton7.setText("Report");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton7);
        jButton7.setBounds(660, 310, 100, 40);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("Total :");
        jPanel15.add(jLabel19);
        jLabel19.setBounds(30, 310, 44, 30);
        jPanel15.add(jTextField2);
        jTextField2.setBounds(80, 310, 150, 30);

        jButton8.setText("Clear");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton8);
        jButton8.setBounds(550, 310, 90, 40);

        jPanel11.add(jPanel15);
        jPanel15.setBounds(10, 120, 820, 380);

        jPanel16.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel16.setLayout(null);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("Select Time Period");
        jPanel16.add(jLabel20);
        jLabel20.setBounds(15, 22, 140, 24);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setText("From");
        jPanel16.add(jLabel21);
        jLabel21.setBounds(10, 50, 44, 30);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setText("To");
        jPanel16.add(jLabel22);
        jLabel22.setBounds(260, 50, 21, 23);
        jPanel16.add(jDateChooser3);
        jDateChooser3.setBounds(60, 50, 160, 30);
        jPanel16.add(jDateChooser4);
        jDateChooser4.setBounds(290, 50, 160, 30);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Stock Items", "Date" }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel16.add(jComboBox2);
        jComboBox2.setBounds(490, 50, 110, 30);

        jButton9.setText("Get Details");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel16.add(jButton9);
        jButton9.setBounds(630, 40, 130, 40);

        jPanel11.add(jPanel16);
        jPanel16.setBounds(10, 10, 820, 100);

        jPanel2.add(jPanel11);
        jPanel11.setBounds(160, 80, 840, 520);

        jTabbedPane1.addTab("Sales", jPanel2);

        jPanel3.setLayout(null);

        jPanel9.setBackground(new java.awt.Color(33, 97, 97));
        jPanel9.setLayout(null);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("HEWAGE SUPER");
        jPanel9.add(jLabel4);
        jLabel4.setBounds(40, 20, 320, 40);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setText("Logout");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton4);
        jButton4.setBounds(890, 30, 80, 30);

        jPanel3.add(jPanel9);
        jPanel9.setBounds(0, 0, 1000, 80);

        jPanel10.setBackground(new java.awt.Color(51, 51, 51));
        jPanel10.setLayout(null);
        jPanel3.add(jPanel10);
        jPanel10.setBounds(0, 80, 160, 520);

        jPanel12.setLayout(null);

        jPanel17.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel17.setLayout(null);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setText("Select Time Period");
        jPanel17.add(jLabel23);
        jLabel23.setBounds(15, 22, 140, 24);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setText("From");
        jPanel17.add(jLabel24);
        jLabel24.setBounds(10, 50, 44, 30);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setText("To");
        jPanel17.add(jLabel25);
        jLabel25.setBounds(260, 50, 21, 23);
        jPanel17.add(jDateChooser5);
        jDateChooser5.setBounds(60, 50, 160, 30);
        jPanel17.add(jDateChooser6);
        jDateChooser6.setBounds(290, 50, 160, 30);

        jButton11.setText("Get Details");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel17.add(jButton11);
        jButton11.setBounds(570, 40, 130, 40);

        jPanel12.add(jPanel17);
        jPanel17.setBounds(10, 10, 820, 100);

        jPanel18.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel18.setLayout(null);

        jButton12.setText("Report");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel18.add(jButton12);
        jButton12.setBounds(670, 290, 100, 40);

        jButton13.setText("Clear");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel18.add(jButton13);
        jButton13.setBounds(550, 290, 90, 40);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTable4);

        jPanel18.add(jScrollPane4);
        jScrollPane4.setBounds(160, 50, 452, 170);

        jPanel12.add(jPanel18);
        jPanel18.setBounds(10, 120, 810, 370);

        jPanel3.add(jPanel12);
        jPanel12.setBounds(160, 80, 840, 530);

        jTabbedPane1.addTab("Employee Performances", jPanel3);

        jPanel19.setLayout(null);

        jPanel20.setBackground(new java.awt.Color(51, 51, 51));
        jPanel20.setLayout(null);
        jPanel19.add(jPanel20);
        jPanel20.setBounds(0, 80, 160, 730);

        jPanel21.setBackground(new java.awt.Color(33, 97, 97));
        jPanel21.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("HEWAGE SUPER");
        jPanel21.add(jLabel2);
        jLabel2.setBounds(40, 20, 320, 40);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Logout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel21.add(jButton2);
        jButton2.setBounds(890, 20, 80, 30);

        jPanel19.add(jPanel21);
        jPanel21.setBounds(0, 0, 1000, 80);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setResizable(false);
            jTable3.getColumnModel().getColumn(1).setResizable(false);
            jTable3.getColumnModel().getColumn(2).setResizable(false);
            jTable3.getColumnModel().getColumn(3).setResizable(false);
            jTable3.getColumnModel().getColumn(4).setResizable(false);
            jTable3.getColumnModel().getColumn(5).setResizable(false);
            jTable3.getColumnModel().getColumn(6).setResizable(false);
        }

        jPanel19.add(jScrollPane3);
        jScrollPane3.setBounds(220, 240, 760, 240);

        jButton14.setText("Clear");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel19.add(jButton14);
        jButton14.setBounds(740, 520, 90, 40);

        jButton15.setText("Report");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel19.add(jButton15);
        jButton15.setBounds(860, 520, 100, 40);

        jPanel22.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel22.setLayout(null);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel26.setText("Select Time Period");
        jPanel22.add(jLabel26);
        jLabel26.setBounds(15, 22, 140, 24);

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel27.setText("From");
        jPanel22.add(jLabel27);
        jLabel27.setBounds(10, 50, 44, 30);

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel28.setText("To");
        jPanel22.add(jLabel28);
        jLabel28.setBounds(270, 50, 21, 23);
        jPanel22.add(jDateChooser7);
        jDateChooser7.setBounds(60, 50, 160, 30);
        jPanel22.add(jDateChooser8);
        jDateChooser8.setBounds(310, 50, 160, 30);

        jButton16.setText("Get Details");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel22.add(jButton16);
        jButton16.setBounds(630, 40, 130, 40);

        jPanel19.add(jPanel22);
        jPanel22.setBounds(170, 90, 820, 100);

        jTabbedPane1.addTab("Customer", jPanel19);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(0, 0, 1000, 830);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed

        jDateChooser5.setDate(null);
        jDateChooser6.setDate(null);
        DefaultTableModel a=(DefaultTableModel)jTable4.getModel();
        a.setRowCount(0);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        String path = "C:\\Users\\lahiru\\Desktop\\Reports\\";
        DefaultTableModel vw3 = (DefaultTableModel) jTable4.getModel();
        if (vw3.getRowCount() > 0) {
            try {
                String adf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
                SimpleDateFormat sdf1= new SimpleDateFormat("yyyy-MM-dd");
                String dteto1=sdf1.format(jDateChooser6.getDate());
                String dtefrom1=sdf1.format(jDateChooser5.getDate());
                Document document = new Document(PageSize.A4, 50, 50, 50, 50);
                String dte = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());

                PdfWriter write1 = PdfWriter.getInstance(document, new FileOutputStream(path + "Employee Performances"+dte+".pdf"));
                write1.setPageEvent(new MyPdfPageEventHelper("WhatsApp Image 2020-02-21 at 23.23.12.jpeg"));

                document.open();
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));

                document.add(new Paragraph("Date :"+dte ,
                    FontFactory.getFont(FontFactory.TIMES_ROMAN,
                        15, Font.BOLD, new BaseColor(0, 0, 0))));
            document.add(new Paragraph("Employee Performances  ",
                FontFactory.getFont(FontFactory.TIMES_ROMAN,
                    15, Font.BOLD, new BaseColor(0, 0, 0))));
        document.add(new Paragraph("From : " + dtefrom1,
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                13, Font.NORMAL, new BaseColor(0, 0, 0))));
    document.add(new Paragraph("TO : " + dteto1,
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            13, Font.NORMAL, new BaseColor(0, 0, 0))));

document.add(new Paragraph("\n"));
document.add(new Paragraph("\n"));
document.add(new Paragraph("\n"));
document.add(new Paragraph("\n"));

Paragraph ph1 = new Paragraph("Employee",
    FontFactory.getFont(FontFactory.TIMES_ROMAN,
        14, Font.NORMAL, new BaseColor(0, 0, 0)));
        Paragraph ph2 = new Paragraph("No of registrations",
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                14, Font.NORMAL, new BaseColor(0, 0, 0)));

        PdfPTable tb1 = new PdfPTable(2);

        tb1.addCell(ph1);
        tb1.addCell(ph2);

        for (int i = 0; i < vw3.getRowCount(); i++) {

            String tEmployee = vw3.getValueAt(i, 0).toString();
            String tNo_of_registrations = vw3.getValueAt(i, 1).toString();

            tb1.addCell(tEmployee);
            tb1.addCell(tNo_of_registrations);
        }

        document.add(new Paragraph("\n"));
        document.add(tb1);
        document.add(new Paragraph("\n"));

        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("                 ----------------------                                                                     --------------------\n"));
        document.add(new Paragraph("                      Signature                                                                                   Date\n"));
        JOptionPane.showMessageDialog(this, "printed ");
        document.close();

        } catch (DocumentException ex) {
            Logger.getLogger(Accountant.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String dteto = sdf.format(jDateChooser6.getDate());
            String dtefrom = sdf.format(jDateChooser5.getDate());

            PreparedStatement ps = null;
            ResultSet rs = null;

            String query1 = "SELECT DISTINCT(RegisteredBy) AS Employee ,COUNT(NIC) AS Count FROM customer GROUP BY RegisteredBy ";
            ps = DBConnection.con().prepareStatement(query1);
            rs = ps.executeQuery();
            jTable4.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Are You Sure?");
        if (result == 0) {
            this.setVisible(false);
            Login l = new Login();
            l.setVisible(true);

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        SimpleDateFormat sdf= new SimpleDateFormat("yyyy-MM-dd");
        String dteto=sdf.format(jDateChooser4.getDate());
        String dtefrom=sdf.format(jDateChooser3.getDate());

        PreparedStatement ps = null;
        ResultSet rs = null;
        DefaultTableModel vw = (DefaultTableModel) jTable2.getModel();

        if (jComboBox2.getSelectedItem().toString().equals("Stock Items")) {
            try {
                String query = "SELECT bills.Item, SUM(bills.Quantity) AS Quantity, items.Revenue,(bills.Quantity*items.Revenue) as profit FROM bills inner join items on bills.Item=items.Name  WHERE  bills.Date BETWEEN '" + dtefrom + "' AND '" + dteto + "' Group By bills.Item";
                ps = DBConnection.con().prepareStatement(query);
                rs = ps.executeQuery();
                jTable2.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
            double total = 0.0;
            for (int i = 0; i < jTable2.getRowCount(); i++) {
                total = total + Double.valueOf(jTable2.getModel().getValueAt(i,3).toString());
            }
            jTextField2.setText(String.valueOf(total));
        }
        else{
            SimpleDateFormat sdf1= new SimpleDateFormat("yyyy-MM-dd");
            String dteto1=sdf1.format(jDateChooser4.getDate());
            String dtefrom1=sdf1.format(jDateChooser3.getDate());
            try {

                String query2 = "SELECT bills.Date, bills.Item, SUM(bills.Quantity) AS Quantity, items.Revenue,(bills.Quantity*items.Revenue) as profit FROM bills inner join items on bills.Item=items.Name  WHERE  bills.Date BETWEEN '" + dtefrom1 + "' AND '" + dteto1 + "' GROUP BY bills.Item";
                ps = DBConnection.con().prepareStatement(query2);
                rs = ps.executeQuery();
                jTable2.setModel(DbUtils.resultSetToTableModel(rs));

                double total = 0.0;
                for (int i = 0; i < jTable2.getRowCount(); i++) {
                    total = total + Double.valueOf(jTable2.getModel().getValueAt(i,4).toString());
                }
                jTextField2.setText(String.valueOf(total));
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        jTextField2.setText(null);
        jComboBox2.setSelectedItem(null);
        jDateChooser3.setDate(null);
        jDateChooser4.setDate(null);
        DefaultTableModel a=(DefaultTableModel)jTable2.getModel();
        a.setRowCount(0);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String path = "C:\\Users\\lahiru\\Desktop\\Reports\\";
        DefaultTableModel vw3 = (DefaultTableModel) jTable2.getModel();
        if (vw3.getRowCount() > 0) {
            try {
                String adf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
                SimpleDateFormat sdf1= new SimpleDateFormat("yyyy-MM-dd");
                String dteto1=sdf1.format(jDateChooser4.getDate());
                String dtefrom1=sdf1.format(jDateChooser3.getDate());
                Document document = new Document(PageSize.A4, 50, 50, 50, 50);
                String dte = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
                if(jComboBox2.getSelectedItem().toString().equals("Stock Items")){
                    try {
                        PdfWriter write = PdfWriter.getInstance(document, new FileOutputStream(path + "SalesReport_Items"+dte+".pdf"));
                         write.setPageEvent(new MyPdfPageEventHelper("WhatsApp Image 2020-02-21 at 23.23.12.jpeg"));
                    } catch (DocumentException ex) {
                        Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    try {
                        PdfWriter write = PdfWriter.getInstance(document, new FileOutputStream(path + "Sales Report_Date"+dte+".pdf"));
                         write.setPageEvent(new MyPdfPageEventHelper("WhatsApp Image 2020-02-21 at 23.23.12.jpeg"));
                    } catch (DocumentException ex) {
                        Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                document.open();
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));

                // Writing line by line
                document.add(new Paragraph("Date :"+dte));
                    
            document.add(new Paragraph("Sales Report  "));
                
        document.add(new Paragraph("From : " + dtefrom1));
            
    document.add(new Paragraph("TO : " + dteto1));
       

// creating  table
if(jComboBox2.getSelectedItem().toString().equals("Stock Items")){

    Paragraph ph1 = new Paragraph("Item",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            14, Font.NORMAL, new BaseColor(0, 0, 0)));
    Paragraph ph2 = new Paragraph("Quantity",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            14, Font.NORMAL, new BaseColor(0, 0, 0)));
    Paragraph ph3 = new Paragraph("Revenue",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            14, Font.NORMAL, new BaseColor(0, 0, 0)));
    Paragraph ph4 = new Paragraph("Profit",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            14, Font.NORMAL, new BaseColor(0, 0, 0)));

    PdfPTable tb1 = new PdfPTable(4);

    // adding header
    //tb1.addCell(ph1);
    tb1.addCell(ph1);
    tb1.addCell(ph2);
    tb1.addCell(ph3);
    tb1.addCell(ph4);

    // read sys table
    for (int i = 0; i < vw3.getRowCount(); i++) {

        String tItem = vw3.getValueAt(i, 0).toString();
        String tQuantity = vw3.getValueAt(i, 1).toString();
        String tRevenue = vw3.getValueAt(i, 2).toString();
        String tProfit = vw3.getValueAt(i, 3).toString();

        //store data in pdf table

        tb1.addCell(tItem);
        tb1.addCell(tQuantity);
        tb1.addCell(tRevenue);
        tb1.addCell(tProfit);

        }
        document.add(new Paragraph("\n"));
        document.add(tb1);
        document.add(new Paragraph("\n"));

        document.add(new Paragraph("             Total Profit : " + jTextField2.getText(),
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                14, Font.BOLD, new BaseColor(0, 0, 0))));

    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("                 ----------------------                                                                     --------------------\n"));
    document.add(new Paragraph("                      Signature                                                                                   Date\n"));

    JOptionPane.showMessageDialog(this, "printed ");

    }else{
        Paragraph ph1 = new Paragraph("Date",
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                15, Font.NORMAL, new BaseColor(0, 0, 0)));
        Paragraph ph2= new Paragraph("Item",
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                15, Font.NORMAL, new BaseColor(0, 0, 0)));
        Paragraph ph3 = new Paragraph("Quantity",
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                15, Font.NORMAL, new BaseColor(0, 0, 0)));
        Paragraph ph4 = new Paragraph("Revenue",
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                15, Font.NORMAL, new BaseColor(0, 0, 0)));
        Paragraph ph5 = new Paragraph("Profit",
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                15, Font.NORMAL, new BaseColor(0, 0, 0)));

        PdfPTable tb1 = new PdfPTable(5);

        // adding header
        tb1.addCell(ph1);
        tb1.addCell(ph2);
        tb1.addCell(ph3);
        tb1.addCell(ph4);
        tb1.addCell(ph5);

        // read sys table
        for (int i = 0; i < vw3.getRowCount(); i++) {
            //String tStockItem = vw3.getValueAt(i, 0).toString();
            String tDate = vw3.getValueAt(i, 0).toString();
            String tItem = vw3.getValueAt(i, 1).toString();
            String tQuantity= vw3.getValueAt(i, 2).toString();
            String tRevenue = vw3.getValueAt(i, 3).toString();
            String tProfit = vw3.getValueAt(i, 4).toString();

            //store data in pdf table
            // tb1.addCell(tStockItem);
            tb1.addCell(tDate);
            tb1.addCell(tItem);
            tb1.addCell(tQuantity);
            tb1.addCell(tRevenue);
            tb1.addCell(tProfit);

        }
        document.add(new Paragraph("\n"));
        document.add(tb1);
        document.add(new Paragraph("\n"));

        document.add(new Paragraph("              Total Profit : " + jTextField2.getText(),
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                14, Font.BOLD, new BaseColor(0, 0, 0))));

    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("                 ----------------------                                                                     --------------------\n"));
    document.add(new Paragraph("                      Signature                                                                                   Date\n"));

    JOptionPane.showMessageDialog(this, "printed ");

    }
    document.close();
    } catch (FileNotFoundException ex) {
        Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        }

        } else {
            JOptionPane.showMessageDialog(this, "select the item and give the quantity");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Are You Sure?");
        if (result == 0) {
            this.setVisible(false);
            Login l = new Login();
            l.setVisible(true);

        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        SimpleDateFormat sdf= new SimpleDateFormat("yyyy-MM-dd");
        String dteto=sdf.format(jDateChooser2.getDate());
        String dtefrom=sdf.format(jDateChooser1.getDate());

        PreparedStatement ps = null;
        ResultSet rs = null;
        //DefaultTableModel vw = (DefaultTableModel) jTable1.getModel();

        if (jComboBox1.getSelectedItem().toString().equals("Date")) {
            try {
                String query = "SELECT `Date`, `ItemName`, `Supplier`, `UnitPrice`, `SellingPrice`, `Quantity`, `Price` FROM `stock` WHERE `Date` BETWEEN '" + dtefrom + "' AND '" + dteto + "'";
                ps = DBConnection.con().prepareStatement(query);
                rs = ps.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
            double total = 0.0;
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                total = total + Double.valueOf(jTable1.getModel().getValueAt(i,6).toString());
            }
            jTextField1.setText(String.valueOf(total));

        }else{
            try {
                SimpleDateFormat sdf1= new SimpleDateFormat("yyyy-MM-dd");
                String dteto1=sdf1.format(jDateChooser2.getDate());
                String dtefrom1=sdf1.format(jDateChooser1.getDate());

                String query2 = "SELECT  `ItemName`, `Supplier`, `UnitPrice`, `SellingPrice`, SUM(`Quantity`) AS `Quantity`, `Price`  FROM `stock` WHERE `Date` BETWEEN '" + dtefrom1 + "' AND '" + dteto1 + "' GROUP BY ItemName ";
                ps = DBConnection.con().prepareStatement(query2);
                rs = ps.executeQuery();
                //double a=Double.valueOf(rs.getString("UnitPrice"))*Double.valueOf(rs.getString("Quantity"));,String.valueOf(a)
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                //vw.addRow(new Object[]{ rs.getString("ItemName"),  rs.getString("UnitPrice"), rs.getString("Quantity")});

                double total = 0.0;
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    total = total + Double.valueOf(jTable1.getModel().getValueAt(i,5).toString());
                }
                jTextField1.setText(String.valueOf(total));
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged

    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jTextField1.setText(null);
        jComboBox1.setSelectedItem(null);
        jDateChooser1.setDate(null);
        jDateChooser2.setDate(null);
        DefaultTableModel a=(DefaultTableModel)jTable1.getModel();
        a.setRowCount(0);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String path = "C:\\Users\\lahiru\\Desktop\\Reports\\";
        DefaultTableModel vw3 = (DefaultTableModel) jTable1.getModel();
        if (vw3.getRowCount() > 0) {
            try {
                String adf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
                SimpleDateFormat sdf1= new SimpleDateFormat("yyyy-MM-dd");
                String dteto1=sdf1.format(jDateChooser2.getDate());
                String dtefrom1=sdf1.format(jDateChooser1.getDate());
                Document document = new Document(PageSize.A4, 50, 50, 50, 50);
                String dte = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
                if(jComboBox1.getSelectedItem().toString().equals("Stock Items")){
                    try {
                        PdfWriter write = PdfWriter.getInstance(document, new FileOutputStream(path + "Purchase Report_Items"+dte+".pdf"));
                        write.setPageEvent(new MyPdfPageEventHelper("WhatsApp Image 2020-02-21 at 23.23.12.jpeg"));
                    } catch (DocumentException ex) {
                        Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    try {
                        PdfWriter write = PdfWriter.getInstance(document, new FileOutputStream(path + "Purchase Report_Date"+dte+".pdf"));
                        write.setPageEvent(new MyPdfPageEventHelper("WhatsApp Image 2020-02-21 at 23.23.12.jpeg"));
                    } catch (DocumentException ex) {
                        Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                document.open();

                // Writing line by line

                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));

                document.add(new Paragraph("Date :"+dte ));
                    
            document.add(new Paragraph("Purchase Report  "));
                
        document.add(new Paragraph("From : " + dtefrom1));
            
    document.add(new Paragraph("TO : " + dteto1));
        

// creating  table
if(jComboBox1.getSelectedItem().toString().equals("Stock Items")){

    Paragraph ph1 = new Paragraph("Item Name",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            10, Font.NORMAL, new BaseColor(0, 0, 0)));
    Paragraph ph2 = new Paragraph("Distributor",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            10, Font.NORMAL, new BaseColor(0, 0, 0)));
    Paragraph ph3 = new Paragraph("UnitPrice",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            10, Font.NORMAL, new BaseColor(0, 0, 0)));
    Paragraph ph4 = new Paragraph("SellingPrice",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            10, Font.NORMAL, new BaseColor(0, 0, 0)));
    Paragraph ph5 = new Paragraph("Quantity",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            12, Font.NORMAL, new BaseColor(0, 0, 0)));
    Paragraph ph6 = new Paragraph("Total",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            12, Font.NORMAL, new BaseColor(0, 0, 0)));

    PdfPTable tb1 = new PdfPTable(6);

    // adding header
    //tb1.addCell(ph1);
    tb1.addCell(ph1);
    tb1.addCell(ph2);
    tb1.addCell(ph3);
    tb1.addCell(ph4);
    tb1.addCell(ph5);
    tb1.addCell(ph6);
    // read sys table
    for (int i = 0; i < vw3.getRowCount(); i++) {

        String tName = vw3.getValueAt(i, 0).toString();
        String tCategorey = vw3.getValueAt(i, 1).toString();
        String tBrand = vw3.getValueAt(i, 2).toString();
        String tUnitPrice = vw3.getValueAt(i, 3).toString();
        String tQuantity = vw3.getValueAt(i, 4).toString();
        String tTotal = vw3.getValueAt(i, 5).toString();

        //store data in pdf table

        tb1.addCell(tName);
        tb1.addCell(tCategorey);
        tb1.addCell(tBrand);
        tb1.addCell(tUnitPrice);
        tb1.addCell(tQuantity);
        tb1.addCell(tTotal);
        }
        document.add(new Paragraph("\n"));
        document.add(tb1);
        document.add(new Paragraph("\n"));

        document.add(new Paragraph("               Grand Total : " + jTextField1.getText()));
          

    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("\n"));
    document.add(new Paragraph("                 ----------------------                                                                     --------------------\n"));
    document.add(new Paragraph("                      Signature                                                                                      Date\n"));

    JOptionPane.showMessageDialog(this, "printed ");

    }else{
        Paragraph ph1 = new Paragraph("Date",
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                10, Font.NORMAL, new BaseColor(0, 0, 0)));
        Paragraph ph2= new Paragraph("Item Name",
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                10, Font.NORMAL, new BaseColor(0, 0, 0)));
        Paragraph ph3 = new Paragraph("Distributor",
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                10, Font.NORMAL, new BaseColor(0, 0, 0)));
        Paragraph ph4 = new Paragraph("UnitPrice",
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                10, Font.NORMAL, new BaseColor(0, 0, 0)));
        Paragraph ph5 = new Paragraph("SellingPrice",
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                10, Font.NORMAL, new BaseColor(0, 0, 0)));
        Paragraph ph6 = new Paragraph("Quantity",
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                12, Font.NORMAL, new BaseColor(0, 0, 0)));
        Paragraph ph7 = new Paragraph("Total Price",
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                14, Font.NORMAL, new BaseColor(0, 0, 0)));

        PdfPTable tb1 = new PdfPTable(7);

        // adding header
        tb1.addCell(ph1);
        tb1.addCell(ph2);
        tb1.addCell(ph3);
        tb1.addCell(ph4);
        tb1.addCell(ph5);
        tb1.addCell(ph6);
        tb1.addCell(ph7);

        // read sys table
        for (int i = 0; i < vw3.getRowCount(); i++) {
            //String tStockItem = vw3.getValueAt(i, 0).toString();
            String tDate = vw3.getValueAt(i, 0).toString();
            String tName = vw3.getValueAt(i, 1).toString();
            String tDistibutor= vw3.getValueAt(i, 2).toString();
            String tUnitPrice = vw3.getValueAt(i, 3).toString();
            String tSellingPrice = vw3.getValueAt(i, 4).toString();
            String tQuantity = vw3.getValueAt(i, 5).toString();
            String tTotal = vw3.getValueAt(i, 6).toString();

            //store data in pdf table
            // tb1.addCell(tStockItem);
            tb1.addCell(tDate);
            tb1.addCell(tName);
            tb1.addCell(tDistibutor);
            tb1.addCell(tUnitPrice);
            tb1.addCell(tSellingPrice);
            tb1.addCell(tQuantity);
            tb1.addCell(tTotal);
        }
        document.add(new Paragraph("\n"));
        document.add(tb1);
        document.add(new Paragraph("\n"));

        document.add(new Paragraph("               Grand Total : " + jTextField1.getText()));
            

    document.add(new Paragraph("**********************************************************************************************************\n"));

    JOptionPane.showMessageDialog(this, "printed ");

    }
    document.close();
    } catch (FileNotFoundException ex) {
        Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        }

        } else {
            JOptionPane.showMessageDialog(this, "select the item and give the quantity");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Are You Sure?");
        if (result == 0) {
            this.setVisible(false);
            Login l = new Login();
            l.setVisible(true);

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Are You Sure?");
        if (result == 0) {
            this.setVisible(false);
            Login l = new Login();
            l.setVisible(true);

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        //jTextField2.setText(null);
        //jComboBox2.setSelectedItem(null);
        jDateChooser7.setDate(null);
        jDateChooser8.setDate(null);
        DefaultTableModel a=(DefaultTableModel)jTable3.getModel();
        a.setRowCount(0);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
         String path = "C:\\Users\\lahiru\\Desktop\\Reports\\";
        DefaultTableModel vw3 = (DefaultTableModel) jTable3.getModel();
        if (vw3.getRowCount() > 0) {
            try {
                String adf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
                SimpleDateFormat sdf1= new SimpleDateFormat("yyyy-MM-dd");
                String dteto1=sdf1.format(jDateChooser8.getDate());
                String dtefrom1=sdf1.format(jDateChooser7.getDate());
                Document document = new Document(PageSize.A4, 50, 50, 50, 50);
                String dte = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());

                PdfWriter write1 = PdfWriter.getInstance(document, new FileOutputStream(path + "Customer_Report"+dte+".pdf"));
                write1.setPageEvent(new MyPdfPageEventHelper("WhatsApp Image 2020-02-21 at 23.23.12.jpeg"));

                document.open();
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));

                document.add(new Paragraph("Date :"+dte ,
                    FontFactory.getFont(FontFactory.TIMES_ROMAN,
                        15, Font.BOLD, new BaseColor(0, 0, 0))));
            document.add(new Paragraph("Customer Report  ",
                FontFactory.getFont(FontFactory.TIMES_ROMAN,
                    15, Font.BOLD, new BaseColor(0, 0, 0))));
        document.add(new Paragraph("From : " + dtefrom1,
            FontFactory.getFont(FontFactory.TIMES_ROMAN,
                13, Font.NORMAL, new BaseColor(0, 0, 0))));
    document.add(new Paragraph("TO : " + dteto1,
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            13, Font.NORMAL, new BaseColor(0, 0, 0))));

document.add(new Paragraph("\n"));
document.add(new Paragraph("\n"));
document.add(new Paragraph("\n"));
document.add(new Paragraph("\n"));

 Paragraph ph1 = new Paragraph("First Name",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            12, Font.NORMAL, new BaseColor(0, 0, 0)));
    Paragraph ph2 = new Paragraph("Last Name",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            12, Font.NORMAL, new BaseColor(0, 0, 0)));
    Paragraph ph3 = new Paragraph("NIC",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            14, Font.NORMAL, new BaseColor(0, 0, 0)));
    Paragraph ph4 = new Paragraph("Branch ID",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            12, Font.NORMAL, new BaseColor(0, 0, 0)));
    Paragraph ph5 = new Paragraph("Registered Date",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            12, Font.NORMAL, new BaseColor(0, 0, 0)));
    Paragraph ph6 = new Paragraph("Registered By",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            12, Font.NORMAL, new BaseColor(0, 0, 0)));
    Paragraph ph7 = new Paragraph("Loyalty Points",
        FontFactory.getFont(FontFactory.TIMES_ROMAN,
            12, Font.NORMAL, new BaseColor(0, 0, 0)));

        PdfPTable tb1 = new PdfPTable(7);

        tb1.addCell(ph1);
        tb1.addCell(ph2);
        tb1.addCell(ph3);
        tb1.addCell(ph4);
        tb1.addCell(ph5);
        tb1.addCell(ph6);
        tb1.addCell(ph7);

        for (int i = 0; i < vw3.getRowCount(); i++) {

            String tFirst = vw3.getValueAt(i, 0).toString();
            String tLast = vw3.getValueAt(i, 1).toString();
            String NIC = vw3.getValueAt(i, 2).toString();
            String Branch = vw3.getValueAt(i, 3).toString();
            String RegisterdDate = vw3.getValueAt(i, 4).toString();
            String RegisteredBy = vw3.getValueAt(i, 5).toString();
            String Loyaltypoints = vw3.getValueAt(i, 6).toString();

            tb1.addCell(tFirst);
            tb1.addCell(tLast);
            tb1.addCell(NIC);
            tb1.addCell(Branch);
            tb1.addCell(RegisterdDate);
            tb1.addCell(RegisteredBy);
            tb1.addCell(Loyaltypoints);
            
        }

        document.add(new Paragraph("\n"));
        document.add(tb1);
        document.add(new Paragraph("\n"));

        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("\n"));
        document.add(new Paragraph("                 ----------------------                                                                     --------------------\n"));
        document.add(new Paragraph("                      Signature                                                                                   Date\n"));
        JOptionPane.showMessageDialog(this, "printed ");
        document.close();

        } catch (DocumentException ex) {
            Logger.getLogger(Accountant.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
            SimpleDateFormat sdf= new SimpleDateFormat("yyyy-MM-dd");
        String dteto=sdf.format(jDateChooser8.getDate());
        String dtefrom=sdf.format(jDateChooser7.getDate());

        PreparedStatement ps = null;
        ResultSet rs = null;
        //DefaultTableModel vw = (DefaultTableModel) jTable1.getModel();

        //if (jComboBox3.getSelectedItem().toString().equals("Date")) {
            try {
                String query = "SELECT `FirstName`, `LastName`, `NIC`, `BranchID`, `RegisterdDate`, `RegisteredBy`, `LoyaltyPoints` FROM `customer` WHERE `RegisterdDate` BETWEEN '" + dtefrom + "' AND '" + dteto + "'";
                ps = DBConnection.con().prepareStatement(query);
                rs = ps.executeQuery();
                jTable3.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
            /*double total = 0.0;
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                total = total + Double.valueOf(jTable1.getModel().getValueAt(i,6).toString());
            }
            jTextField1.setText(String.valueOf(total));*/

       // }else{
           /* try {
                SimpleDateFormat sdf1= new SimpleDateFormat("yyyy-MM-dd");
                String dteto1=sdf1.format(jDateChooser8.getDate());
                String dtefrom1=sdf1.format(jDateChooser7.getDate());

                String query2 = "SELECT  `ItemName`, `Supplier`, `UnitPrice`, `SellingPrice`, SUM(`Quantity`) AS `Quantity`, `Price`  FROM `stock` WHERE `Date` BETWEEN '" + dtefrom1 + "' AND '" + dteto1 + "' GROUP BY ItemName ";
                ps = DBConnection.con().prepareStatement(query2);
                rs = ps.executeQuery();
                //double a=Double.valueOf(rs.getString("UnitPrice"))*Double.valueOf(rs.getString("Quantity"));,String.valueOf(a)
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                //vw.addRow(new Object[]{ rs.getString("ItemName"),  rs.getString("UnitPrice"), rs.getString("Quantity")});

                double total = 0.0;
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    total = total + Double.valueOf(jTable1.getModel().getValueAt(i,5).toString());
                }
                jTextField1.setText(String.valueOf(total));
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }

        }*/
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        Items a= new Items();
        this.setVisible(false);
        a.setVisible(true);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        Promotions p= new Promotions();
        p.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        CurrentStock  c= new CurrentStock();
        c.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton20ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reports().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private com.toedter.calendar.JDateChooser jDateChooser4;
    private com.toedter.calendar.JDateChooser jDateChooser5;
    private com.toedter.calendar.JDateChooser jDateChooser6;
    private com.toedter.calendar.JDateChooser jDateChooser7;
    private com.toedter.calendar.JDateChooser jDateChooser8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
