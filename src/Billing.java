
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.CMYKColor;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author lahiru
 */
public class Billing extends javax.swing.JFrame {

    /**
     * Creates new form Billing
     */
    public Billing() throws SQLException {
        initComponents();
        InvoiceNo();
    }
    
    
    
    public void InvoiceNo() throws SQLException{
        String query = "SELECT MAX(InvoiceNo)FROM bills ";
            PreparedStatement ps = null;
            ResultSet rs = null;
            ps = DBConnection.con().prepareStatement(query);
            rs = ps.executeQuery();
            if(rs.next()){
            rs.getString("MAX(invoiceNo)");
            
            if(rs.getString("MAX(invoiceNo)")==null){
                jTextField2.setText("INV0000001");
            }else{
               
                
                String id=String.valueOf(rs.getString("MAX(invoiceNo)"));
             
                String id1=id.substring(0,3);
                String id2=id.substring(4,10);
               long n= Long.parseLong(id2);
                n++;
                String num1=Long.toString(n);
                jTextField2.setText(id1+String.format("%07d",n));
            }
            }  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1300, 650));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(33, 97, 97));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("HEWAGE SUPER");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(40, 20, 320, 40);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(1180, 20, 80, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1300, 80);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setLayout(null);

        jPanel6.setBackground(new java.awt.Color(153, 153, 153));
        jPanel6.setLayout(null);

        jButton11.setText("Customer details");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton11);
        jButton11.setBounds(20, 20, 120, 30);

        jButton10.setText("Promotions");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton10);
        jButton10.setBounds(20, 60, 120, 30);

        jButton12.setText("Barcode Generate");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton12);
        jButton12.setBounds(20, 100, 120, 30);

        jButton3.setText("Customer");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton3);
        jButton3.setBounds(20, 140, 120, 30);

        jPanel2.add(jPanel6);
        jPanel6.setBounds(0, 50, 160, 190);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 60, 160, 850);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "BILLING PROCESS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel8.setLayout(null);
        jPanel8.add(jLabel9);
        jLabel9.setBounds(30, 30, 100, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Branch :");
        jPanel8.add(jLabel7);
        jLabel7.setBounds(20, 70, 70, 30);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Employee :");
        jPanel8.add(jLabel8);
        jLabel8.setBounds(210, 60, 80, 50);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Sub Total :");
        jPanel8.add(jLabel6);
        jLabel6.setBounds(810, 350, 80, 30);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Total Amount :");
        jPanel8.add(jLabel12);
        jLabel12.setBounds(810, 420, 110, 50);
        jPanel8.add(jTextField3);
        jTextField3.setBounds(920, 430, 150, 30);

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jPanel8.add(jTextField4);
        jTextField4.setBounds(920, 350, 150, 30);

        jTextField5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField5MouseClicked(evt);
            }
        });
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5KeyPressed(evt);
            }
        });
        jPanel8.add(jTextField5);
        jTextField5.setBounds(920, 390, 90, 30);
        jPanel8.add(jLabel10);
        jLabel10.setBounds(120, 30, 70, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Barcode :");
        jPanel8.add(jLabel2);
        jLabel2.setBounds(20, 150, 60, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Unit Prize :");
        jPanel8.add(jLabel3);
        jLabel3.setBounds(20, 190, 60, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Quantity :");
        jPanel8.add(jLabel4);
        jLabel4.setBounds(20, 230, 60, 30);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("ADD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton2);
        jButton2.setBounds(340, 240, 90, 40);

        jTextField7.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTextField7ComponentAdded(evt);
            }
        });
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        jPanel8.add(jTextField7);
        jTextField7.setBounds(90, 150, 290, 30);

        jTextField8.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTextField8ComponentAdded(evt);
            }
        });
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });
        jTextField8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField8KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField8KeyTyped(evt);
            }
        });
        jPanel8.add(jTextField8);
        jTextField8.setBounds(90, 230, 160, 30);
        jPanel8.add(jTextField9);
        jTextField9.setBounds(90, 190, 160, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Unit Price", "Quantity", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel8.add(jScrollPane1);
        jScrollPane1.setBounds(510, 60, 590, 260);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setText("Print Bill");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton5);
        jButton5.setBounds(900, 480, 90, 40);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Invoice No:");
        jPanel8.add(jLabel5);
        jLabel5.setBounds(20, 120, 90, 15);

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });
        jPanel8.add(jTextField2);
        jTextField2.setBounds(90, 110, 160, 30);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Discount :");
        jPanel8.add(jLabel11);
        jLabel11.setBounds(810, 380, 70, 50);

        jPanel8.add(jComboBox1);
        jComboBox1.setBounds(90, 70, 100, 30);

        jPanel8.add(jComboBox2);
        jComboBox2.setBounds(280, 70, 90, 30);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("%");
        jPanel8.add(jLabel16);
        jLabel16.setBounds(1010, 390, 14, 30);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Use Loyalty"));
        jPanel4.setLayout(null);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Customer's NIC:");
        jPanel4.add(jLabel17);
        jLabel17.setBounds(20, 30, 90, 30);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setText("Loyalty Points :");
        jPanel4.add(jLabel18);
        jLabel18.setBounds(20, 80, 90, 30);

        jTextField13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField13MouseClicked(evt);
            }
        });
        jTextField13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField13KeyPressed(evt);
            }
        });
        jPanel4.add(jTextField13);
        jTextField13.setBounds(150, 130, 190, 30);

        jTextField14.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTextField14ComponentAdded(evt);
            }
        });
        jTextField14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField14MouseClicked(evt);
            }
        });
        jTextField14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField14ActionPerformed(evt);
            }
        });
        jTextField14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField14KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField14KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField14KeyTyped(evt);
            }
        });
        jPanel4.add(jTextField14);
        jTextField14.setBounds(150, 30, 190, 30);

        jTextField15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField15ActionPerformed(evt);
            }
        });
        jPanel4.add(jTextField15);
        jTextField15.setBounds(150, 80, 60, 30);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setText("New Loyalty Points :");
        jPanel4.add(jLabel19);
        jLabel19.setBounds(20, 130, 120, 30);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setText("Use:");
        jPanel4.add(jLabel20);
        jLabel20.setBounds(220, 80, 24, 30);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel4.add(jTextField1);
        jTextField1.setBounds(250, 80, 90, 30);

        jPanel8.add(jPanel4);
        jPanel4.setBounds(410, 330, 380, 190);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Loyalty"));
        jPanel3.setLayout(null);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Customer's NIC:");
        jPanel3.add(jLabel13);
        jLabel13.setBounds(20, 30, 90, 30);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Total Amount :");
        jPanel3.add(jLabel14);
        jLabel14.setBounds(20, 80, 90, 30);

        jTextField10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField10MouseClicked(evt);
            }
        });
        jTextField10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField10KeyPressed(evt);
            }
        });
        jPanel3.add(jTextField10);
        jTextField10.setBounds(150, 130, 160, 30);

        jTextField11.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTextField11ComponentAdded(evt);
            }
        });
        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11ActionPerformed(evt);
            }
        });
        jTextField11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField11KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField11KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField11KeyTyped(evt);
            }
        });
        jPanel3.add(jTextField11);
        jTextField11.setBounds(150, 30, 160, 30);

        jTextField12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField12ActionPerformed(evt);
            }
        });
        jPanel3.add(jTextField12);
        jTextField12.setBounds(150, 80, 160, 30);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("Loyalty Points :");
        jPanel3.add(jLabel15);
        jLabel15.setBounds(20, 130, 90, 30);

        jPanel8.add(jPanel3);
        jPanel3.setBounds(20, 330, 380, 190);

        getContentPane().add(jPanel8);
        jPanel8.setBounds(180, 90, 1120, 810);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       try {                                  
           String dte = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
           jLabel9.setText(dte); 
           
           
           String tm = new SimpleDateFormat("hh:mm").format(Calendar.getInstance().getTime());
           jLabel10.setText(tm);
           
           
           String sql="SELECT * FROM promotions";
           PreparedStatement ps0= null;
           ResultSet rs0= null;
           ps0=DBConnection.con().prepareStatement(sql);
           rs0=ps0.executeQuery();
           while(rs0.next()){
               String sDate1=rs0.getString("till");
               
//               System.out.println(sDate1);
//               System.out.println(dte);
               if(sDate1.equals(dte)){
                   JOptionPane.showMessageDialog(this, "A promotion is to expire!", "", JOptionPane.WARNING_MESSAGE, UIManager.getIcon("OptionPane.warningIcon"));
                   
               }
           }
           
           
           
           
           try {
               PreparedStatement ps= null;
               ResultSet rs= null;
               
               String query="SELECT * FROM branch ";
               ps=DBConnection.con().prepareStatement(query);
               rs=ps.executeQuery();
               while(rs.next()){
                   jComboBox1.addItem(rs.getString("BID"));
               }
               
               String query1="SELECT * FROM employee ";
               ps=DBConnection.con().prepareStatement(query1);
               rs=ps.executeQuery();
               while(rs.next()){
                   jComboBox2.addItem(rs.getString("EID"));
               }
               
           } catch (SQLException ex) {
               Logger.getLogger(CUSTOMER.class.getName()).log(Level.SEVERE, null, ex);
           }
       } catch (SQLException ex) {
            Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Are You Sure?");
        if (result == 0) {
            this.setVisible(false);
            Login l = new Login();
            l.setVisible(true);

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField7ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTextField7ComponentAdded

    }//GEN-LAST:event_jTextField7ComponentAdded

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed

    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        try {
            String a = jTextField7.getText();
            String query = "SELECT * FROM `items`  WHERE  `code` = ? ";
            PreparedStatement ps = null;
            ResultSet rs = null;
            ps = DBConnection.con().prepareStatement(query);
            ps.setString(1, a);
            rs = ps.executeQuery();
            if (rs.next()) {
                
                
                double c=Double.valueOf(rs.getString("UnitPrize"));
                double b=Double.valueOf(rs.getString("Revenue"));
                double d=c+b;
                

                jTextField9.setText(String.valueOf(d));

            } else {
                JOptionPane.showMessageDialog(this, "Item Not Found!");
                jTextField7.setText("");
            }
        } catch (SQLException ex) {
            Logger.getLogger(CUSTOMER.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField8ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTextField8ComponentAdded


    }//GEN-LAST:event_jTextField8ComponentAdded

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       try {                                         
         
         //counting cost for each item
         float unit_Prize = Float.valueOf(jTextField9.getText());
         int count = Integer.valueOf(jTextField8.getText());
         float cost = (unit_Prize * count);
         String a = jTextField7.getText();
         //adding details to table
         PreparedStatement ps0 = null;
         PreparedStatement ps01 = null;
         ResultSet rs = null;
         ResultSet rs1 = null;
         DefaultTableModel vw = (DefaultTableModel) jTable1.getModel();
         
         String Qyery1="SELECT * FROM promotions WHERE code=? ";
         try {
             ps0 = DBConnection.con().prepareStatement(Qyery1);
         } catch (SQLException ex) {
             Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
         }
         ps0.setString(1, a);
         rs = ps0.executeQuery();
         if(rs.next()){
             if(rs.getString("Status").equals("Active")){
                 double unit_Prize1 = Double.valueOf(rs.getString("newPrice"));
                int count1 = Integer.valueOf(jTextField8.getText());
                double cost1 = (unit_Prize1 * count);
                 vw.addRow(new Object[]{ rs.getString("ItemName"), rs.getString("newPrice"), jTextField8.getText(), String.valueOf(cost1)});
                 
//               for(int i=0;i<vw.getRowCount();i++){
//                   String q1="SELECT Quantity FROM stock WHERE ItemName=?";
//                   String name=String.valueOf(vw.getValueAt(i, 0));
//                   PreparedStatement ps4=null;
//                   ResultSet rs4= null;
//                   ps4=DBConnection.con().prepareStatement(q1);
//                   ps4.setString(1, name);
//                   rs=ps4.executeQuery();
//                   if(rs.next()){
//                   int old=Integer.parseInt(rs.getString("Quantity"));
//                   int new1=Integer.parseInt(jTextField8.getText());
//                   int final1=old-new1;
//                       System.out.println(final1);
//                       String q2="UPDATE stock SET Quantity=? WHERE ItemName=?";
//                       PreparedStatement ps5=null;
//                        ResultSet rs5= null;
//                        ps4=DBConnection.con().prepareStatement(q2);
//                        ps4.setString(1, String.valueOf(final1));
//                        ps4.setString(2,name );
//                        ps4.executeUpdate();
//                   }
             }
         }
             else{
                 String query = "SELECT * FROM `items` WHERE `code`=?";
                 ps0 = DBConnection.con().prepareStatement(query);
                 ps0.setString(1, a);
                 rs = ps0.executeQuery();
                 while (rs.next()) {
                    //checking for availability in stock
                        
                        /*String query1 = "SELECT * FROM `stock` WHERE `ItemName`=?";
                         ps01 = DBConnection.con().prepareStatement(query1);
                         ps01.setString(1, rs.getString("Name"));
                         rs1 = ps01.executeQuery();
                         if(rs1.next()){
                             int t=Integer.valueOf(rs1.getString("Quantity"));
                             if(t<count){
                                 JOptionPane.showMessageDialog(this, "Out of Stock!");
                                 jTextField8.setText(null);
                             }
                         }*/
                    
                    
                    
                    //
                     vw.addRow(new Object[]{ rs.getString("Name"),jTextField9.getText(), jTextField8.getText(), String.valueOf(cost)});
                 }
         }
                 
                 
             
             
             //calculating total
             double totalsum = 0;
             
             for (int i = 0; i < vw.getRowCount(); i++) {
                 totalsum = totalsum + Double.parseDouble((String) vw.getValueAt(i, 3));
             }
             
             
             
             
             
             jTextField4.setText(String.valueOf(totalsum));
             jTextField7.setText("");
             jTextField8.setText("");
             jTextField9.setText("");
             
          
     } catch (SQLException ex) {
         Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
     }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyTyped

    }//GEN-LAST:event_jTextField8KeyTyped

    private void jTextField8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyPressed
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            jTextField8.setEditable(true);
        } else {

            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                // allo edit
                jTextField8.setEditable(true);
            } else {
                jTextField8.setEditable(false);
            }
        }
    }//GEN-LAST:event_jTextField8KeyPressed

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyPressed
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            jTextField5.setEditable(true);
        } else {

            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                // allo edit
                jTextField5.setEditable(true);
            } else {
                jTextField5.setEditable(false);
            }
        }
    }//GEN-LAST:event_jTextField5KeyPressed

    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11ActionPerformed
        try {
            PreparedStatement ps = null;
            ResultSet rs = null;
            String a = jTextField11.getText();
            String query = "SELECT `NIC`  FROM `customer`  WHERE  `NIC` = ? ";
            ps = DBConnection.con().prepareStatement(query);
            ps.setString(1, a);
            rs = ps.executeQuery();
            if (rs.next()) {
                 if(rs.getString("NIC").equals("0")){
                     JOptionPane.showMessageDialog(this, "Customer Not Found!");
                        jTextField11.setText("0");
                        jTextField12.setText("0");
                        jTextField10.setText("0");
                 }else{
                JOptionPane.showMessageDialog(this, "Loyal Customer");
                String value = jTextField3.getText();
                jTextField12.setText(value);

            } 
                
                
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(CUSTOMER.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jTextField11ActionPerformed

    private void jTextField11KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyPressed
         String ph=jTextField11.getText();
      
      int len=ph.length();
      char c= evt.getKeyChar();
      // check the character
      if(evt.getKeyChar()>='0'&& evt.getKeyChar()<='9' || evt.getExtendedKeyCode()==KeyEvent.VK_V){
          
      if(len<10){
      jTextField11.setEditable(true);
      }else{
      jTextField11.setEditable(false);
      
      }
      }
      else{
      //erase number 'backspace work'
      if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE||evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
          // allo edit
          jTextField11.setEditable(true);
      }else{
           jTextField11.setEditable(false);
      }
      }
    }//GEN-LAST:event_jTextField11KeyPressed

    private void jTextField11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyReleased

    }//GEN-LAST:event_jTextField11KeyReleased

    private void jTextField11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyTyped

    }//GEN-LAST:event_jTextField11KeyTyped

    private void jTextField11ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTextField11ComponentAdded

    }//GEN-LAST:event_jTextField11ComponentAdded

    private void jTextField12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField12ActionPerformed


    }//GEN-LAST:event_jTextField12ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try { 
            
            //updating stock
           
         DefaultTableModel vw = (DefaultTableModel) jTable1.getModel();
                 for(int i=0;i<vw.getRowCount();i++){
                     String q1="SELECT Quantity FROM stock WHERE ItemName=?";
                     String name=String.valueOf(vw.getValueAt(i, 0));
                     PreparedStatement ps4=null;
                     ResultSet rs4= null;
                     ps4=DBConnection.con().prepareStatement(q1);
                     ps4.setString(1, name);
                     rs4=ps4.executeQuery();
                     if(rs4.next()){
                         int old=Integer.parseInt(rs4.getString("Quantity"));
                         int new1=Integer.parseInt(String.valueOf(vw.getValueAt(i, 2)));
                         int final1=old-new1;
                         System.out.println(final1);
                         
                         String q2="UPDATE stock SET Quantity=? WHERE ItemName=?";
                         PreparedStatement ps5=null;
                         ResultSet rs5= null;
                         ps4=DBConnection.con().prepareStatement(q2);
                         ps4.setString(1, String.valueOf(final1));
                         ps4.setString(2,name);
                         ps4.executeUpdate();
                     }
                 }
            
            
            //Adding loyalty points
            int loyalty=0;
            PreparedStatement ps = null;
            ResultSet rs = null;
            String sql="SELECT LoyaltyPoints FROM customer WHERE NIC=?";
            String a=jTextField11.getText();
            ps=DBConnection.con().prepareStatement(sql);
            ps.setString(1,a);
            rs=ps.executeQuery();
            if(rs.next()){
                loyalty=Integer.valueOf(jTextField13.getText())+Integer.valueOf(jTextField10.getText());
                String sql2="UPDATE customer SET LoyaltyPoints=?  WHERE NIC=?";
                ps=DBConnection.con().prepareStatement(sql2);
                ps.setString(1,String.valueOf(loyalty));
                ps.setString(2,a);
                ps.executeUpdate();
                
            }
            //printing bill
            try {
                String path = "C:\\Users\\lahiru\\Desktop\\Reports\\";
                DefaultTableModel vw3 = (DefaultTableModel) jTable1.getModel();
                if (vw3.getRowCount() > 0) {
                    String adf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
                    Document document = new Document(PageSize.A4, 50, 50, 50, 50);
                    try {
                        PdfWriter write = PdfWriter.getInstance(document, new FileOutputStream(path + jTextField2.getText() + ".pdf"));
                        document.open();
                        
                        // Writing line by line
                        document.add(new Paragraph("**********************************************************************************************************\n"));
                        document.add(new Paragraph("                          HEWAGE SUPER \n", FontFactory.getFont(FontFactory.TIMES_ITALIC,
                                24, Font.NORMAL, new BaseColor(0, 0, 0))));
                        document.add(new Paragraph("                                   katugasthota                                        \n", FontFactory.getFont(FontFactory.TIMES_ITALIC,
                                20, Font.NORMAL, new BaseColor(0, 0, 0))));
                        document.add(new Paragraph("                                    xxxxxxxxxx                            \n", FontFactory.getFont(FontFactory.TIMES_ITALIC,
                                20, Font.NORMAL, new BaseColor(0, 0, 0))));
                        document.add(new Paragraph("                                                                        \n"));
                        document.add(new Paragraph("                                                                       \n"));
                        document.add(new Paragraph("**********************************************************************************************************\n"));
                        document.add(new Paragraph("Date : " + adf,
                                FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                        13, Font.NORMAL, new BaseColor(0, 0, 0))));
                        document.add(new Paragraph("Branch : " + jComboBox1.getSelectedItem(),
                                FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                        13, Font.NORMAL, new BaseColor(0, 0, 0))));
                        document.add(new Paragraph("Cashier : " + jComboBox2.getSelectedItem(),
                                FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                        13, Font.NORMAL, new BaseColor(0, 0, 0))));
                        document.add(new Paragraph("INVOICE NO : " + jTextField2.getText(),
                                FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                        13, Font.BOLD, new BaseColor(0, 0, 0))));
                        
                        // creating  table
                        Paragraph ph1 = new Paragraph("Item",
                                FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                        15, Font.BOLD, new BaseColor(0, 0, 0)));
                        Paragraph ph2 = new Paragraph("Unit Price",
                                FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                        15, Font.BOLD, new BaseColor(0, 0, 0)));
                        Paragraph ph3 = new Paragraph("Quantity",
                                FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                        15, Font.BOLD, new BaseColor(0, 0, 0)));
                        Paragraph ph4 = new Paragraph("Total",
                                FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                        15, Font.BOLD, new BaseColor(0, 0, 0)));
                        
                        PdfPTable tb1 = new PdfPTable(4);
                        
                        // adding header
                        tb1.addCell(ph1);
                        tb1.addCell(ph2);
                        tb1.addCell(ph3);
                        tb1.addCell(ph4);
                        // read sys table
                        for (int i = 0; i < vw3.getRowCount(); i++) {
                            
                            String titem = vw3.getValueAt(i, 0).toString();
                            String tprice = vw3.getValueAt(i, 1).toString();
                            String tqty = vw3.getValueAt(i, 2).toString();
                            String ttotal = vw3.getValueAt(i, 3).toString();
                            
                            //store data in pdf table
                            tb1.addCell(titem);
                            tb1.addCell(tprice);
                            tb1.addCell(tqty);
                            tb1.addCell(ttotal);
                        }
                        document.add(new Paragraph("\n"));
                        document.add(tb1);
                        document.add(new Paragraph("\n"));
                        
                        document.add(new Paragraph("                Total : " + jTextField4.getText(),
                                FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                        14, Font.BOLD, new BaseColor(0, 0, 0))));
                        document.add(new Paragraph("                Discount : " + jTextField5.getText()+"%",
                                FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                        14, Font.BOLD, new BaseColor(0, 0, 0))));
                        document.add(new Paragraph("                Grand Total: " + jTextField3.getText(),
                                FontFactory.getFont(FontFactory.TIMES_ROMAN, 
                                        14, Font.BOLD, new BaseColor(0, 0, 0))));
                        document.add(new Paragraph("                Loyalty Points: " + jTextField10.getText(),
                                FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                        14, Font.BOLD, new BaseColor(0, 0, 0))));
                        document.add(new Paragraph("**********************************************************************************************************\n"));
                        document.add(new Paragraph("                                    Thank You! Come Again. \n", FontFactory.getFont(FontFactory.TIMES_ITALIC,
                                20, Font.NORMAL, new BaseColor(0, 0, 0))));
                        
                        JOptionPane.showMessageDialog(this, "printed ");
                        
                    } catch (DocumentException ex) {
                        Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    document.close();
                } else {
                    JOptionPane.showMessageDialog(this, "select the item and give the quantity");
                }
                
                //Adding bill details to sales table
                DefaultTableModel vw1 = (DefaultTableModel) jTable1.getModel();
                // vw.setRowCount(0);
                for (int i = 0; i < vw1.getRowCount(); i++) {
                    String InvoiceNo = jTextField2.getText();
                    String Date = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
                    String Employee = String.valueOf(jComboBox2.getSelectedItem());
                    
                    String Item = String.valueOf(vw.getValueAt(i, 0));
                    String Quantity = String.valueOf(vw.getValueAt(i, 2));
                    String Subtotal =jTextField4.getText();
                    String GrandTotal = String.valueOf(jTextField3.getText());
                    String Discount = String.valueOf(jTextField5.getText());
                    double DiscountAm = ((Double.valueOf(jTextField4.getText()) * Double.valueOf(Discount)) / 100);
                    String DiscountAmount = String.valueOf(DiscountAm);
                    String LoyaltyPoints = String.valueOf(jTextField10.getText());
                    String client = String.valueOf(jTextField11.getText());
                    String Branch = String.valueOf(jComboBox1.getSelectedItem());
                    
                    String query_A = "INSERT INTO `bills`"
                            + "(`InvoiceNo`, `Date`, `Employee`,`Item`,`Quantity`,`Subtotal` ,`GrandTotal`, `Discount`, `DiscountAmount`,`LoyaltyPoints`, `client`, `Branch`)"
                            + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
                    PreparedStatement ps5 = null;
                    ResultSet rs1 = null;
                    ps5 = DBConnection.con().prepareStatement(query_A);
                    
                    ps5.setString(1, InvoiceNo);
                    ps5.setString(2, Date);
                    ps5.setString(3, Employee);
                    ps5.setString(4, Item);
                    ps5.setString(5, Quantity);
                    ps5.setString(6,Subtotal );
                    ps5.setString(7, GrandTotal);
                    ps5.setString(8, Discount);
                    ps5.setString(9, DiscountAmount);
                    ps5.setString(10, LoyaltyPoints);
                    ps5.setString(11, client);
                    ps5.setString(12, Branch);
                    
                    ps5.execute();
                }
            } catch (SQLException ex) {
                Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
            }
            jTextField7.setText("");
            jTextField8.setText("");
            jTextField9.setText("");
            jTextField10.setText("");
            jTextField11.setText("");
            jTextField12.setText("");
            jTextField4.setText("");
            jTextField3.setText("");
            jTextField5.setText("");
            jComboBox1.setSelectedItem(null);
            jComboBox2.setSelectedItem(null);
            jTextField13.setText("");
            jTextField14.setText("");
            jTextField15.setText("");
            jTextField1.setText("");
            
            DefaultTableModel am=(DefaultTableModel)jTable1.getModel();
            am.setRowCount(0);
            try {
                InvoiceNo();
                //  jTable1.setModel(new DefaultTableModel(null,String[]("InvoiceNo", "Date", "Employee","Item", "GrandTotal", "Discount", "DiscountAmount","LoyaltyPoints", "client")));
            } catch (SQLException ex) {
                Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        try {
            InvoiceNo();
        } catch (SQLException ex) {
            Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jTextField10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyPressed
     
    }//GEN-LAST:event_jTextField10KeyPressed

    private void jTextField5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField5MouseClicked
            Double amount = Double.parseDouble(jTextField4.getText());
        
        if (amount<5000.00) {
            String gtotal = String.valueOf(jTextField4.getText());
            jTextField3.setText(gtotal);
           int discount = 0;
            jTextField5.setText(String.valueOf(discount));
        } else if(5000.00<amount &&amount<10000.00){
            double total = Double.valueOf(jTextField4.getText());
            double discount = 10;
            double grand_Total = total - ((total * discount) / 100);
            jTextField3.setText(String.valueOf(grand_Total));
             jTextField5.setText(String.valueOf(discount));
        }
        else if(10000.00<amount &&amount<20000.00){
            double total = Double.valueOf(jTextField4.getText());
           int discount = 11;
            double grand_Total = total - ((total * discount) / 100);
            jTextField3.setText(String.valueOf(grand_Total));
             jTextField5.setText(String.valueOf(discount));
        }
        else if(20000.00<amount &&amount<40000.00){
            double total = Double.valueOf(jTextField4.getText());
            int  discount = 14;
            double grand_Total = total - ((total * discount) / 100);
            jTextField3.setText(String.valueOf(grand_Total));
             jTextField5.setText(String.valueOf(discount));
        }
        else if(40000.00<amount ){
            double total = Double.valueOf(jTextField4.getText());
            int  discount = 18;
            double grand_Total = total - ((total * discount) / 100);
            jTextField3.setText(String.valueOf(grand_Total));
             jTextField5.setText(String.valueOf(discount));
        }
       
    }//GEN-LAST:event_jTextField5MouseClicked

    private void jTextField10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField10MouseClicked
       double total=Double.parseDouble(jTextField12.getText());
       int loyaltypoint=(int)(total/100);
       jTextField10.setText(String.valueOf(loyaltypoint));
    }//GEN-LAST:event_jTextField10MouseClicked

    private void jTextField13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField13MouseClicked
            int a=Integer.valueOf(jTextField15.getText())-Integer.valueOf(jTextField1.getText());
            jTextField13.setText(String.valueOf(a));
    }//GEN-LAST:event_jTextField13MouseClicked

    private void jTextField13KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField13KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13KeyPressed

    private void jTextField14ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTextField14ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField14ComponentAdded

    private void jTextField14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField14ActionPerformed
             
        
    
        
    }//GEN-LAST:event_jTextField14ActionPerformed

    private void jTextField14KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField14KeyPressed
        String ph=jTextField14.getText();
      
      int len=ph.length();
      char c= evt.getKeyChar();
      // check the character
      if(evt.getKeyChar()>='0'&& evt.getKeyChar()<='9' || evt.getExtendedKeyCode()==KeyEvent.VK_V){
          
      if(len<10){
      jTextField14.setEditable(true);
      }else{
      jTextField14.setEditable(false);
      
      }
      }
      else{
      //erase number 'backspace work'
      if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE||evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
          // allo edit
          jTextField14.setEditable(true);
      }else{
           jTextField14.setEditable(false);
      }
      }
    }//GEN-LAST:event_jTextField14KeyPressed

    private void jTextField14KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField14KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField14KeyReleased

    private void jTextField14KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField14KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField14KeyTyped

    private void jTextField15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField15ActionPerformed
        
    
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        int n = Integer.valueOf(jTextField1.getText());
        int old = Integer.valueOf(jTextField15.getText());
         int finalv = Integer.valueOf(old-n);
         jTextField13.setText(String.valueOf(finalv));
       
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        CustomerDetails s = new CustomerDetails();
        s.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        EmployeePromotion a= new EmployeePromotion();
        this.setVisible(false);
        a.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        barcode  c = new barcode();
        c.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         CUSTOMER c= new CUSTOMER();
        c.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField14MouseClicked
            jTextField14.setText(jTextField11.getText());
        try {
            PreparedStatement ps = null;
            ResultSet rs = null;
            String a = jTextField14.getText();
            String query = "SELECT `LoyaltyPoints`  FROM `customer`  WHERE  `NIC` = ? ";
            ps = DBConnection.con().prepareStatement(query);
            ps.setString(1, a);
            rs = ps.executeQuery();
            if (rs.next()) {
                jTextField15.setText(rs.getString("LoyaltyPoints"));
                
            } 
        } catch (SQLException ex) {
            Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextField14MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Billing().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Billing.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
